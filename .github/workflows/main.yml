# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - run: npm run build --if-present
      - run: cp {package.json,package-lock.json} ./dist

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Download production artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Create new ycf version
        uses: goodsmileduck/yandex-serverless-action@v1
        with:
          token: ${{ secrets.TOKEN }}
          bucket: ${{ secrets.BUCKET }}
          function_id: 'd4epbuv2hl4gc7juqdka'
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          runtime: 'nodejs12-preview'
          memory: '128'
          execution_timeout: '30'
          entrypoint: 'index.handler'
          environment: AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=ru-central1,TOGGL_TOKEN=${{ secrets.TOGGL_TOKEN }},SLACK_TOKEN=${{ secrets.SLACK_TOKEN }},CLOUD_TRIGGER_ID=${{ secrets.CLOUD_TRIGGER_ID }}
          source: './dist'
